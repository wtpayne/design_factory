# -*- coding: utf-8 -*-
"""
---

title:
    "DSPy experiments module."

description:
    "This module contains DSPy experiments."

id:
    "d09b4c26-a156-47fd-a898-7ea25606691b"

type:
    dt003_python_module

validation_level:
    v00_minimum

protection:
    k00_general

copyright:
    "Copyright 2024 William Payne"

license:
    "Licensed under the Apache License, Version
    2.0 (the License); you may not use this file
    except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed
    to in writing, software distributed under
    the License is distributed on an AS IS BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    either express or implied. See the License
    for the specific language governing
    permissions and limitations under the
    License."


"""


import os

import dspy
import dspy.primitives
import dspy.teleprompt
import ruamel.yaml


# # =============================================================================
# class ScoreSignature(dspy.Signature):
#     """
#     Score the semantic similarity between generated and ground-truth text.

#     """

#     ground_truth              = dspy.InputField(
#                                     desc = 'Ground truth exemplar text')

#     prediction                = dspy.InputField(
#                                     desc = 'Prediction generated by the LLM')

#     score = dspy.OutputField(desc = ('Integer in interval [0,100] '
#                                      'with higher numbers indicating '
#                                      'greater semantic similarity.'))

# # =============================================================================
# class SemanticSimilarityScoreModule(dspy.Module):
#     """
#     Score the semantic similarity between generated and ground-truth text.

#     """

#     # -------------------------------------------------------------------------
#     def __init__(self):
#         """
#         """
#         super().__init__()
#         self.score = dspy.ChainOfThought(ScoreSignature)

#     # -------------------------------------------------------------------------
#     def forward(self, ground_truth, prediction):
#         """
#         """
#         result = self.predict_score(ground_truth = ground_truth,
#                                     prediction   = prediction)
#         dspy.Assert(result.fom.isnumeric(), error)
#         try:
#             int_score = int(result.semantic_similarity_score)

#         figure_of_merit = int(0)
#         return figure_of_merit

# -----------------------------------------------------------------------------
def main():
    """
    """

    dirpath_self     = os.path.dirname(os.path.realpath(__file__))
    filepath_dataset = os.path.join(dirpath_self, 'dataset.yaml')

    loader = ruamel.yaml.YAML(typ = 'safe')
    with open(filepath_dataset) as file_dataset:
        map_dataset = loader.load(file_dataset)

    import pprint
    pprint.pprint(map_dataset)
