system:
  id_system:                harmonica


###############################################################################
host:
  localhost:
    hostname:               'localhost'
    acct_run:               ''
    acct_provision:         ''
    port_range:             '8090-9000'
    dirpath_log:            ''
    launch_cmd:             ''
    environment:            'e003_discord'
    log_level:              'INFO'


###############################################################################
process:
  proc_main:
    host:                   localhost


###############################################################################
node:

  # ---------------------------------------------------------------------------
  # System clock and state management for the entire system.
  #
  ctrl_sys:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.ctrl.sys.ic00_edict
    state_type:             py_dict
    config:
      frequency_hz:         5

  # ---------------------------------------------------------------------------
  # State management for the main process.
  #
  ctrl_main:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.ctrl.proc.ic00_edict
    state_type:             py_dict

  # ---------------------------------------------------------------------------
  # Main deliberation engine.
  #
  deliberation:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            harmonica.deliberation.ic00_edict
    state_type:             py_dict
    config:
      prompt:
        summary:            |
                            "Please provide a summary for the given
                            transcript. The topic given to the
                            participants was:

                            '{str_topic}'

                            Make sure that the summary highlights the
                            main different points of view that have been
                            expressed and the main arguments that have
                            been put forward and suggests potential
                            consensus solutions.

                            '{str_transcript}'
                            "

  # ---------------------------------------------------------------------------
  # Discord bot integration.
  #
  discord:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.net.discord.bot.ic00_edict
    state_type:             py_dict
    config:
      filepath_env:         Null
      key_token:            TOKEN_DISCORD_HARMONICA_DEV
      secs_sleep:           0.2
      log_level:            'INFO'
      msg:
      - type:               msg_dm
        id_user:            563330464220446726
        content:            "Harmonica has started OK."

      - type:               cfg_appcmd
        name:               dbg_transcript_show
        description:        "Show the current transcript."

      - type:               cfg_appcmd
        name:               dbg_prompt_show
        description:        "Show the currently configured prompts."

      - type:               cfg_appcmd
        name:               dbg_prompt_set
        description:        "Set one of the configured prompts."
        param:
          id_prompt:        str
          prompt:           str

      - type:               cfg_appcmd
        name:               ask
        description:        "Create a deliberation session with a specific question."
        param:
          question:         str

  # ---------------------------------------------------------------------------
  # OpenAI ChatGPT integration.
  #
  openai:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.net.openai.request.ic00_edict
    state_type:             py_dict
    config:
      filepath_env:         Null
      envvar_key:           APIKEY_OPENAI
      secs_interval:        0.1
      is_bit:               False
      is_async:             True
      default:
        id_endpoint:        'chat_completions'
        model:              'gpt-3.5-turbo'
        temperature:        1.0
        n:                  1
        stream:             False
        presence_penalty:   0.0
        frequency_penalty:  0.0
        user:               ''
      log_level:            'INFO'

  # ---------------------------------------------------------------------------
  # Logging.
  #
  measure_inputs:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.log.data.measurement.ic00_edict
    state_type:             py_dict

  measure_outputs:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.log.data.measurement.ic00_edict
    state_type:             py_dict

  sense_localhost:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.util.noop.ic00_edict
      # py_module:            cl.log.metric.sensor.ic00_edict
    state_type:             py_dict

  log_event:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.log.event.ic00_edict
    state_type:             py_dict
    config:
      dirpath_log:          Null
      log_level:            'INFO'

  log_metric:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.log.metric.ic00_edict
    state_type:             py_dict
    config:
      dirpath_log:          Null

  log_data:
    process:                proc_main
    req_host_cfg:           default_configuration
    functionality:
      py_module:            cl.log.data.ic00_edict
    state_type:             py_dict
    config:
      dirpath_log:          Null


###############################################################################
edge:

# Control signals

- owner: ctrl_sys
  data:  py_dict
  src:   ctrl_sys.outputs.ctrl_main
  dst:   ctrl_main.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_discord
  dst:   discord.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_openai
  dst:   openai.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_sense_localhost
  dst:   sense_localhost.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_measure_inputs
  dst:   measure_inputs.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_measure_outputs
  dst:   measure_outputs.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_log_event
  dst:   log_event.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_log_metric
  dst:   log_metric.inputs.ctrl

- owner: ctrl_main
  data:  py_dict
  src:   ctrl_main.outputs.ctrl_log_data
  dst:   log_data.inputs.ctrl

# Deliberatioon integration

- owner: ctrl_main
  data:  py_dict
  src:   measure_inputs.outputs.ctrl
  dst:   deliberation.inputs.ctrl

# Discord integration

- owner: deliberation
  data:  py_dict
  src:   deliberation.outputs.discord
  dst:   measure_outputs.inputs.discord

- owner: measure_outputs
  data:  py_dict
  src:   measure_outputs.outputs.discord
  dst:   discord.inputs.msg

- owner: discord
  data:  py_dict
  src:   discord.outputs.msg
  dst:   measure_inputs.inputs.discord
  dirn:  feedback

- owner: measure_inputs
  data:  py_dict
  src:   measure_inputs.outputs.discord
  dst:   deliberation.inputs.discord

# OpenAI integration

- owner: deliberation
  data:  py_dict
  src:   deliberation.outputs.openai
  dst:   measure_outputs.inputs.openai

- owner: measure_outputs
  data:  py_dict
  src:   measure_outputs.outputs.openai
  dst:   openai.inputs.request

- owner: openai
  data:  py_dict
  src:   openai.outputs.result
  dst:   measure_inputs.inputs.openai
  dirn:  feedback

- owner: measure_inputs
  data:  py_dict
  src:   measure_inputs.outputs.openai
  dst:   deliberation.inputs.openai

# Event logging

- owner: discord
  data:  py_dict
  src:   discord.outputs.log_event
  dst:   log_event.inputs.discord

- owner: openai
  data:  py_dict
  src:   openai.outputs.log_event
  dst:   log_event.inputs.openai

- owner: deliberation
  data:  py_dict
  src:   deliberation.outputs.log_event
  dst:   log_event.inputs.deliberation

# Metric logging

- owner: sense_localhost
  data:  py_dict
  src:   sense_localhost.outputs.log_metric
  dst:   log_metric.inputs.sense_localhost

- owner: discord
  data:  py_dict
  src:   discord.outputs.log_metric
  dst:   log_metric.inputs.discord

- owner: openai
  data:  py_dict
  src:   openai.outputs.log_metric
  dst:   log_metric.inputs.openai

- owner: deliberation
  data:  py_dict
  src:   deliberation.outputs.log_metric
  dst:   log_metric.inputs.deliberation

# Data logging

- owner: measure_inputs
  data:  py_dict
  src:   measure_inputs.outputs.log_data
  dst:   log_data.inputs.measure_inputs

- owner: measure_outputs
  data:  py_dict
  src:   measure_outputs.outputs.log_data
  dst:   log_data.inputs.measure_outputs

- owner: discord
  data:  py_dict
  src:   discord.outputs.log_data
  dst:   log_data.inputs.discord

- owner: openai
  data:  py_dict
  src:   openai.outputs.log_data
  dst:   log_data.inputs.openai

- owner: deliberation
  data:  py_dict
  src:   deliberation.outputs.log_data
  dst:   log_data.inputs.deliberation


###############################################################################
data:
  py_list:  py_list
  py_dict:  py_dict
  py_str:   py_str


###############################################################################
req_host_cfg:
  default_configuration:
    role:
      - default_role


###############################################################################
role:
  default_role:
    tasks:
      - name: Update apt-get repo and cache
        become:        yes
        become_user:   root
        become_method: sudo
        apt:
          update_cache:     yes
          force_apt_get:    yes
          cache_valid_time: 3600
